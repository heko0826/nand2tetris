// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
    DMux4Way(in=in, sel=sel[0..1], a=w1, b=w2, c=w3, d=w4);

    DMux(in=w1, sel=sel[2], a=a, b=e);
    DMux(in=w2, sel=sel[2], a=b, b=f);
    DMux(in=w3, sel=sel[2], a=c, b=g);
    DMux(in=w4, sel=sel[2], a=d, b=h);

    /*
    Not(in=sel[0],out=notsel0);
    Not(in=sel[1],out=notsel1);
    Not(in=sel[2],out=notsel2);

    And3Way(a=notsel2,b=notsel1,c=notsel0,out=sela);
    And3Way(a=notsel2,b=notsel1,c=sel[0],out=selb);
    And3Way(a=notsel2,b=sel[1],c=notsel0,out=selc);
    And3Way(a=notsel2,b=sel[1],c=sel[0],out=seld);
    And3Way(a=sel[2],b=notsel0,c=notsel1,out=sele);
    And3Way(a=sel[2],b=notsel1,c=sel[0],out=self);
    And3Way(a=sel[2],b=sel[1],c=notsel0,out=selg);
    And3Way(a=sel[2],b=sel[1],c=sel[0],out=selh);

    And(a=in,b=sela,out=a);
    And(a=in,b=selb,out=b);
    And(a=in,b=selc,out=c);
    And(a=in,b=seld,out=d);
    And(a=in,b=sele,out=e);
    And(a=in,b=self,out=f);
    And(a=in,b=selg,out=g);
    And(a=in,b=selh,out=h);
    */
}